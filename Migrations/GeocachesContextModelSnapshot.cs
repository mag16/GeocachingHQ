// <auto-generated />
using System;
using Geocaches.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GeocachingApi.Migrations
{
    [DbContext(typeof(GeocachesContext))]
    partial class GeocachesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Geocaches.Models.Geocache", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Coordinate")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Geocache");
                });

            modelBuilder.Entity("Geocaches.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("Geocache")
                        .HasColumnType("integer");

                    b.Property<int?>("GeocacheId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("isActive")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("GeocacheId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Item");
                });

            modelBuilder.Entity("Geocaches.Models.Item", b =>
                {
                    b.HasOne("Geocaches.Models.Geocache", null)
                        .WithMany("Items")
                        .HasForeignKey("GeocacheId");
                });

            modelBuilder.Entity("Geocaches.Models.Geocache", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
